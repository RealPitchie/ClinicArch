// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Application.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210618172607_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.Entities.Man", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcomitantDiagnoses")
                        .HasColumnType("text");

                    b.Property<string>("CryoPortions")
                        .HasColumnType("text");

                    b.Property<string>("HereditaryMutations")
                        .HasColumnType("text");

                    b.Property<string>("HistologicalAnalysis")
                        .HasColumnType("text");

                    b.Property<string>("PatientId")
                        .HasColumnType("text");

                    b.Property<string>("PlannedTreatment")
                        .HasColumnType("text");

                    b.Property<string>("PreliminaryDiagnosis")
                        .HasColumnType("text");

                    b.Property<string>("Program")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<string>("ReturnForRealization")
                        .HasColumnType("text");

                    b.Property<string>("SecretAnalysis")
                        .HasColumnType("text");

                    b.Property<DateTime>("SemenCryoDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SexualInfections")
                        .HasColumnType("text");

                    b.Property<string>("Spermogram")
                        .HasColumnType("text");

                    b.Property<string>("TNM")
                        .HasColumnType("text");

                    b.Property<string>("VRTProgram")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("MenStats");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Age")
                        .HasColumnType("numeric");

                    b.Property<string>("BadHabits")
                        .HasColumnType("text");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("SurName")
                        .HasColumnType("text");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Domain.Entities.Woman", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AMG")
                        .HasColumnType("double precision");

                    b.Property<int>("Abortions")
                        .HasColumnType("integer");

                    b.Property<string>("BiochemicalPregnancy")
                        .HasColumnType("text");

                    b.Property<string>("BirthMethod")
                        .HasColumnType("text");

                    b.Property<int>("Births")
                        .HasColumnType("integer");

                    b.Property<string>("ClinicalPregnancy")
                        .HasColumnType("text");

                    b.Property<string>("ConcomitantDiagnoses")
                        .HasColumnType("text");

                    b.Property<string>("CryopreservedEmbryosQuality")
                        .HasColumnType("text");

                    b.Property<double>("CryopreservedEmbryosQuantity")
                        .HasColumnType("double precision");

                    b.Property<string>("CryopreservedOocytes")
                        .HasColumnType("text");

                    b.Property<int>("DayOfCycle")
                        .HasColumnType("integer");

                    b.Property<string>("EmbryoQuality")
                        .HasColumnType("text");

                    b.Property<double>("EmbryoQuantity")
                        .HasColumnType("double precision");

                    b.Property<string>("EndometrialPreparation")
                        .HasColumnType("text");

                    b.Property<double>("EndometrialThicknessImplantationDay")
                        .HasColumnType("double precision");

                    b.Property<double>("EndometrialThicknessTriggerDay")
                        .HasColumnType("double precision");

                    b.Property<double>("Estradiol")
                        .HasColumnType("double precision");

                    b.Property<double>("FSG")
                        .HasColumnType("double precision");

                    b.Property<string>("FertilizationProgram")
                        .HasColumnType("text");

                    b.Property<string>("Flora")
                        .HasColumnType("text");

                    b.Property<string>("GynecologicalDiseases")
                        .HasColumnType("text");

                    b.Property<double>("HChGOnTransferDay")
                        .HasColumnType("double precision");

                    b.Property<string>("HereditaryMutations")
                        .HasColumnType("text");

                    b.Property<string>("HistologicalAnalysis")
                        .HasColumnType("text");

                    b.Property<DateTime>("ImplantationDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastMenstruation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Menarche")
                        .HasColumnType("text");

                    b.Property<string>("Menstruation")
                        .HasColumnType("text");

                    b.Property<string>("Miscarriages")
                        .HasColumnType("text");

                    b.Property<string>("NegativeResult")
                        .HasColumnType("text");

                    b.Property<double>("NumberOfEmbryos")
                        .HasColumnType("double precision");

                    b.Property<string>("ObstetricComplications")
                        .HasColumnType("text");

                    b.Property<double>("OocytesFertilized")
                        .HasColumnType("double precision");

                    b.Property<double>("OocytesReceived")
                        .HasColumnType("double precision");

                    b.Property<string>("OvulationTrigger")
                        .HasColumnType("text");

                    b.Property<double>("PGTA")
                        .HasColumnType("double precision");

                    b.Property<string>("PatientId")
                        .HasColumnType("text");

                    b.Property<string>("PlannedTreatment")
                        .HasColumnType("text");

                    b.Property<string>("PredictedResponse")
                        .HasColumnType("text");

                    b.Property<int>("Pregnancies")
                        .HasColumnType("integer");

                    b.Property<int>("PregnancyDurationOnBirthDate")
                        .HasColumnType("integer");

                    b.Property<string>("PreliminaryDiagnosis")
                        .HasColumnType("text");

                    b.Property<string>("Preparates")
                        .HasColumnType("text");

                    b.Property<double>("Program")
                        .HasColumnType("double precision");

                    b.Property<double>("Prolactin")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantityUnserved")
                        .HasColumnType("double precision");

                    b.Property<string>("RealizationRequest")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<string>("SexualInfections")
                        .HasColumnType("text");

                    b.Property<int>("StimulationDurationInDays")
                        .HasColumnType("integer");

                    b.Property<string>("StimulationProtocol")
                        .HasColumnType("text");

                    b.Property<DateTime>("StimulationStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TNM")
                        .HasColumnType("text");

                    b.Property<double>("TTG")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TVPDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Testosterone")
                        .HasColumnType("double precision");

                    b.Property<string>("Ultrasound")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("WomenStats");
                });

            modelBuilder.Entity("Domain.Entities.Man", b =>
                {
                    b.HasOne("Domain.Entities.Patient", null)
                        .WithOne("MenStats")
                        .HasForeignKey("Domain.Entities.Man", "PatientId");
                });

            modelBuilder.Entity("Domain.Entities.Woman", b =>
                {
                    b.HasOne("Domain.Entities.Patient", null)
                        .WithOne("WomenStats")
                        .HasForeignKey("Domain.Entities.Woman", "PatientId");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Navigation("MenStats");

                    b.Navigation("WomenStats");
                });
#pragma warning restore 612, 618
        }
    }
}
